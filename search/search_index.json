{"docs":[{"location":"/paradox.json","text":"","title":""},{"location":"/index.html","text":"","title":"Speedtest"},{"location":"/index.html#speedtest","text":"As source to implementing this lib, I used mLabs Android Implementation Android Lib.","title":"Speedtest"},{"location":"/index.html#maven","text":"speedtest is deployed on bintray (jcenter).","title":"maven"},{"location":"/index.html#sbt","text":"sbt libraryDependencies += \"com.quadstingray\" %% \"speedtest\" % \"0.8.1\" Maven <dependencies>\n  <dependency>\n    <groupId>com.quadstingray</groupId>\n    <artifactId>speedtest_2.13</artifactId>\n    <version>0.8.1</version>\n  </dependency>\n</dependencies> Gradle dependencies {\n  implementation \"com.quadstingray:speedtest_2.13:0.8.1\"\n}","title":"SBT"},{"location":"/index.html#licence","text":"Apache 2 License.","title":"Licence"},{"location":"/index.html#todos-","text":"Documentation","title":"Todos:"},{"location":"/samples/index.html","text":"","title":"Samples"},{"location":"/samples/index.html#samples","text":"Full Test Download Test Upload Test","title":"Samples"},{"location":"/samples/full-test.html","text":"","title":"Full Test"},{"location":"/samples/full-test.html#full-test","text":"","title":"Full Test"},{"location":"/samples/full-test.html#adding-to-build-sbt","text":"sbt libraryDependencies += \"com.quadstingray\" %% \"speedtest\" % \"0.8.1\" Maven <dependencies>\n  <dependency>\n    <groupId>com.quadstingray</groupId>\n    <artifactId>speedtest_2.13</artifactId>\n    <version>0.8.1</version>\n  </dependency>\n</dependencies> Gradle dependencies {\n  implementation \"com.quadstingray:speedtest_2.13:0.8.1\"\n}","title":"Adding To build.sbt"},{"location":"/samples/full-test.html#run-auto-full-test","text":"The Framework choose the automatic method to find best server.\nval speedTestResult = SpeedTest.runTest()","title":"Run Auto Full Test"},{"location":"/samples/full-test.html#run-full-test-with-specific-server","text":"Removed from API because Token needed","title":"Run Full Test with specific Server"},{"location":"/samples/full-test.html#run-full-test-with-callbacks","text":"With CallBacks you can update your UI do somethings at running the test.\nvar dlCount        = 0\nvar dlBandwidthSum = 0.0\ndef dlCallBack(result: MeasurementResult): Unit = {\n  dlCount += 1\n  dlBandwidthSum += result.bandwidth.bytePerSeconds\n}\n\nvar upCount        = 0\nvar upBandwidthSum = 0.0\ndef upCallBack(result: MeasurementResult): Unit = {\n  upCount += 1\n  upBandwidthSum += result.bandwidth.bytePerSeconds\n}\n\nval speedTestResult = SpeedTest.runTest(downloadMeasurementCallBack = dlCallBack, uploadMeasurementCallBack = upCallBack)","title":"Run Full Test with CallBacks"},{"location":"/samples/download-test.html","text":"","title":"Download Test"},{"location":"/samples/download-test.html#download-test","text":"","title":"Download Test"},{"location":"/samples/download-test.html#adding-to-build-sbt","text":"sbt libraryDependencies += \"com.quadstingray\" %% \"speedtest\" % \"0.8.1\" Maven <dependencies>\n  <dependency>\n    <groupId>com.quadstingray</groupId>\n    <artifactId>speedtest_2.13</artifactId>\n    <version>0.8.1</version>\n  </dependency>\n</dependencies> Gradle dependencies {\n  implementation \"com.quadstingray:speedtest_2.13:0.8.1\"\n}","title":"Adding To build.sbt"},{"location":"/samples/download-test.html#run-download-test","text":"The Framework choose the automatic method to find best server.\nval speedTestResult = SpeedTest.runDownload()","title":"Run Download Test"},{"location":"/samples/download-test.html#run-download-test-with-specific-server","text":"Removed from API because Token needed","title":"Run Download Test with specific Server"},{"location":"/samples/download-test.html#run-download-test-with-callbacks","text":"With CallBacks you can update your UI do somethings at running the test.\nvar dlCount        = 0\nvar dlBandwidthSum = 0.0\ndef dlCallBack(result: MeasurementResult): Unit = {\n  dlCount += 1\n  dlBandwidthSum += result.bandwidth.bytePerSeconds\n}\n\nval speedTestResult = SpeedTest.runDownload(downloadMeasurementCallBack = dlCallBack)","title":"Run Download Test with CallBacks"},{"location":"/samples/upload-test.html","text":"","title":"Upload Test"},{"location":"/samples/upload-test.html#upload-test","text":"","title":"Upload Test"},{"location":"/samples/upload-test.html#adding-to-build-sbt","text":"sbt libraryDependencies += \"com.quadstingray\" %% \"speedtest\" % \"0.8.1\" Maven <dependencies>\n  <dependency>\n    <groupId>com.quadstingray</groupId>\n    <artifactId>speedtest_2.13</artifactId>\n    <version>0.8.1</version>\n  </dependency>\n</dependencies> Gradle dependencies {\n  implementation \"com.quadstingray:speedtest_2.13:0.8.1\"\n}","title":"Adding To build.sbt"},{"location":"/samples/upload-test.html#run-upload-test","text":"The Framework choose the automatic method to find best server.\nval speedTestResult = SpeedTest.runUpload()","title":"Run Upload Test"},{"location":"/samples/upload-test.html#run-upload-test-with-specific-server","text":"Removed from API because Token needed Run Upload Test with CallBacks With CallBacks you can update your UI do somethings at running the test.\nvar upCount        = 0\nvar upBandwidthSum = 0.0\ndef upCallBack(result: MeasurementResult): Unit = {\n  upCount += 1\n  upBandwidthSum += result.bandwidth.bytePerSeconds\n}\n\nval speedTestResult = SpeedTest.runUpload(uploadMeasurementCallBack = upCallBack)","title":"Run Upload Test with specific Server"},{"location":"/ndt7-protocol.html","text":"","title":"Sources"},{"location":"/ndt7-protocol.html#sources","text":"","title":"Sources"},{"location":"/ndt7-protocol.html#ndt7-protocol","text":"https://github.com/m-lab/ndt-server/blob/master/spec/ndt7-protocol.md","title":"NDT7 Protocol"},{"location":"/ndt7-protocol.html#all-server-informations","text":"All Servers http://locate.measurementlab.net/ndt?format=json&policy=all Extended Server Infos https://siteinfo.mlab-oti.measurementlab.net/v1/sites/locations.json","title":"All Server Informations"},{"location":"/ndt7-protocol.html#find-server","text":"https://locate.measurementlab.net/ndt_ssl?format=json","title":"Find Server"}]}